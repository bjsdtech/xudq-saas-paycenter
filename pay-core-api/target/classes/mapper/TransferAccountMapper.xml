<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xudq.api.dao.TransferAccountMapper" >
  <resultMap id="BaseResultMap" type="com.xudq.api.po.TransferAccount" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="transfer_id" property="transferId" jdbcType="VARCHAR" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="com_user_id" property="comUserId" jdbcType="VARCHAR" />
    <result column="business_order_id" property="businessOrderId" jdbcType="VARCHAR" />
    <result column="frozen_id" property="frozenId" jdbcType="VARCHAR" />
    <result column="transfer_type" property="transferType" jdbcType="TINYINT" />
    <result column="transfer_status" property="transferStatus" jdbcType="TINYINT" />
    <result column="from_account_id" property="fromAccountId" jdbcType="BIGINT" />
    <result column="from_account_type" property="fromAccountType" jdbcType="SMALLINT" />
    <result column="to_account_id" property="toAccountId" jdbcType="BIGINT" />
    <result column="to_account_type" property="toAccountType" jdbcType="SMALLINT" />
    <result column="amount" property="amount" jdbcType="INTEGER" />
    <result column="transfer_time" property="transferTime" jdbcType="TIMESTAMP" />
    <result column="curency_type" property="curencyType" jdbcType="VARCHAR" />
    <result column="source_ip" property="sourceIp" jdbcType="VARCHAR" />
    <result column="trans_code" property="transCode" jdbcType="VARCHAR" />
    <result column="is_deleted" property="isDeleted" jdbcType="TINYINT" />
    <result column="last_modify_time" property="lastModifyTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, transfer_id, order_id, business_order_id, frozen_id, transfer_type, transfer_status, from_account_id,
    from_account_type, to_account_id, to_account_type, amount, transfer_time, curency_type, 
    source_ip, trans_code, is_deleted, last_modify_time, create_time, update_time, com_user_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from pay_core_transfer_account
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByTransferId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from pay_core_transfer_account
    where transfer_id = #{transferId}
  </select>
  <insert id="insert" parameterType="com.xudq.api.po.TransferAccount" >
    insert into pay_core_transfer_account (id, transfer_id, order_id, 
      business_order_id, frozen_id, transfer_type, transfer_status,
      from_account_id, from_account_type, to_account_id, 
      to_account_type, amount, transfer_time, 
      curency_type, source_ip, trans_code, 
      is_deleted, last_modify_time, com_user_id
      )
    values (#{id,jdbcType=INTEGER}, #{transferId,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR}, 
      #{businessOrderId,jdbcType=VARCHAR}, #{frozenId,jdbcType=VARCHAR}, #{transferType,jdbcType=TINYINT}, #{transferStatus,jdbcType=TINYINT},
      #{fromAccountId,jdbcType=BIGINT}, #{fromAccountType,jdbcType=SMALLINT}, #{toAccountId,jdbcType=BIGINT},
      #{toAccountType,jdbcType=SMALLINT}, #{amount,jdbcType=INTEGER}, #{transferTime,jdbcType=TIMESTAMP}, 
      #{curencyType,jdbcType=VARCHAR}, #{sourceIp,jdbcType=VARCHAR}, #{transCode,jdbcType=VARCHAR}, 
      #{isDeleted,jdbcType=TINYINT}, #{lastModifyTime,jdbcType=TIMESTAMP}, #{comUserId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xudq.api.po.TransferAccount" keyProperty="id" useGeneratedKeys="true">
    insert into pay_core_transfer_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="comUserId != null" >
        com_user_id,
      </if>
      <if test="transferId != null" >
        transfer_id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="businessOrderId != null" >
        business_order_id,
      </if>
      <if test="frozenId != null" >
        frozen_id,
      </if>
      <if test="transferType != null" >
        transfer_type,
      </if>
      <if test="transferStatus != null" >
        transfer_status,
      </if>
      <if test="fromAccountId != null" >
        from_account_id,
      </if>
      <if test="fromAccountType != null" >
        from_account_type,
      </if>
      <if test="toAccountId != null" >
        to_account_id,
      </if>
      <if test="toAccountType != null" >
        to_account_type,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="transferTime != null" >
        transfer_time,
      </if>
      <if test="curencyType != null" >
        curency_type,
      </if>
      <if test="sourceIp != null" >
        source_ip,
      </if>
      <if test="transCode != null" >
        trans_code,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
      <if test="lastModifyTime != null" >
        last_modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="comUserId != null" >
        #{comUserId,jdbcType=VARCHAR},
      </if>
      <if test="transferId != null" >
        #{transferId,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="businessOrderId != null" >
        #{businessOrderId,jdbcType=VARCHAR},
      </if>
      <if test="frozenId != null" >
        #{frozenId,jdbcType=VARCHAR},
      </if>
      <if test="transferType != null" >
        #{transferType,jdbcType=TINYINT},
      </if>
      <if test="transferStatus != null" >
        #{transferStatus,jdbcType=TINYINT},
      </if>
      <if test="fromAccountId != null" >
        #{fromAccountId,jdbcType=BIGINT},
      </if>
      <if test="fromAccountType != null" >
        #{fromAccountType,jdbcType=SMALLINT},
      </if>
      <if test="toAccountId != null" >
        #{toAccountId,jdbcType=BIGINT},
      </if>
      <if test="toAccountType != null" >
        #{toAccountType,jdbcType=SMALLINT},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="transferTime != null" >
        #{transferTime,jdbcType=TIMESTAMP},
      </if>
      <if test="curencyType != null" >
        #{curencyType,jdbcType=VARCHAR},
      </if>
      <if test="sourceIp != null" >
        #{sourceIp,jdbcType=VARCHAR},
      </if>
      <if test="transCode != null" >
        #{transCode,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="lastModifyTime != null" >
        #{lastModifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xudq.api.po.TransferAccount" keyProperty="id" useGeneratedKeys="true">
    update pay_core_transfer_account
    <set >
      <if test="transferId != null" >
        transfer_id = #{transferId,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="comUserId != null" >
        com_user_id = #{comUserId,jdbcType=VARCHAR},
      </if>
      <if test="businessOrderId != null" >
        business_order_id = #{businessOrderId,jdbcType=VARCHAR},
      </if>
      <if test="frozenId != null" >
        frozen_id = #{frozenId,jdbcType=VARCHAR},
      </if>
      <if test="transferType != null" >
        transfer_type = #{transferType,jdbcType=TINYINT},
      </if>
      <if test="transferStatus != null" >
        transfer_status = #{transferStatus,jdbcType=TINYINT},
      </if>
      <if test="fromAccountId != null" >
        from_account_id = #{fromAccountId,jdbcType=BIGINT},
      </if>
      <if test="fromAccountType != null" >
        from_account_type = #{fromAccountType,jdbcType=SMALLINT},
      </if>
      <if test="toAccountId != null" >
        to_account_id = #{toAccountId,jdbcType=BIGINT},
      </if>
      <if test="toAccountType != null" >
        to_account_type = #{toAccountType,jdbcType=SMALLINT},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="transferTime != null" >
        transfer_time = #{transferTime,jdbcType=TIMESTAMP},
      </if>
      <if test="curencyType != null" >
        curency_type = #{curencyType,jdbcType=VARCHAR},
      </if>
      <if test="sourceIp != null" >
        source_ip = #{sourceIp,jdbcType=VARCHAR},
      </if>
      <if test="transCode != null" >
        trans_code = #{transCode,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="lastModifyTime != null" >
        last_modify_time = #{lastModifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xudq.api.po.TransferAccount" >
    update pay_core_transfer_account
    set transfer_id = #{transferId,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=VARCHAR},
      business_order_id = #{businessOrderId,jdbcType=VARCHAR},
      frozen_id = #{frozenId,jdbcType=VARCHAR},
      transfer_type = #{transferType,jdbcType=TINYINT},
      transfer_status = #{transferStatus,jdbcType=TINYINT},
      from_account_id = #{fromAccountId,jdbcType=BIGINT},
      from_account_type = #{fromAccountType,jdbcType=SMALLINT},
      to_account_id = #{toAccountId,jdbcType=BIGINT},
      to_account_type = #{toAccountType,jdbcType=SMALLINT},
      amount = #{amount,jdbcType=INTEGER},
      transfer_time = #{transferTime,jdbcType=TIMESTAMP},
      curency_type = #{curencyType,jdbcType=VARCHAR},
      source_ip = #{sourceIp,jdbcType=VARCHAR},
      trans_code = #{transCode,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=TINYINT},
      last_modify_time = #{lastModifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <sql id="where_sql" >
    <where >
      <if test="transferId != null" >
        AND transfer_id = #{transferId,jdbcType=VARCHAR}
      </if>
      <if test="orderId != null" >
        AND order_id = #{orderId,jdbcType=VARCHAR}
      </if>
      <if test="comUserId != null" >
        AND com_user_id = #{comUserId,jdbcType=VARCHAR}
      </if>
      <if test="comUserIds != null and comUserIds.size > 0">
        and com_user_id in
        <foreach item="item" index="index" collection="comUserIds" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
      <if test="businessOrderId != null" >
        AND business_order_id = #{businessOrderId,jdbcType=VARCHAR}
      </if>
      <if test="frozenId != null" >
        AND frozen_id = #{frozenId,jdbcType=VARCHAR}
      </if>
      <if test="transferType != null" >
        AND transfer_type = #{transferType,jdbcType=TINYINT}
      </if>
      <if test="transferStatus != null" >
        AND transfer_status = #{transferStatus,jdbcType=TINYINT}
      </if>
      <if test="fromAccountId != null" >
        AND from_account_id = #{fromAccountId,jdbcType=BIGINT}
      </if>
      <if test="fromAccountType != null" >
        AND from_account_type = #{fromAccountType,jdbcType=SMALLINT}
      </if>
      <if test="toAccountId != null" >
        AND to_account_id = #{toAccountId,jdbcType=BIGINT}
      </if>
      <if test="toAccountType != null" >
        AND to_account_type = #{toAccountType,jdbcType=SMALLINT}
      </if>
      <if test="amount != null" >
        AND amount = #{amount,jdbcType=INTEGER}
      </if>
      <if test="transferTime != null" >
        AND transfer_time = #{transferTime,jdbcType=TIMESTAMP}
      </if>
      <if test="curencyType != null" >
        AND curency_type = #{curencyType,jdbcType=VARCHAR}
      </if>
      <if test="sourceIp != null" >
        AND source_ip = #{sourceIp,jdbcType=VARCHAR}
      </if>
      <if test="transCode != null" >
        AND trans_code = #{transCode,jdbcType=VARCHAR}
      </if>
      <if test="isDeleted != null" >
        AND is_deleted = #{isDeleted,jdbcType=TINYINT}
      </if>
      <if test="lastModifyTime != null" >
        AND last_modify_time = #{lastModifyTime,jdbcType=TIMESTAMP}
      </if>
    </where>
  </sql>
  <insert id="batchInsert" parameterType="java.util.Map" >
    insert into pay_core_transfer_account (
    transfer_id,order_id,business_order_id,frozen_id,
    transfer_type,transfer_status,from_account_id,
    from_account_type,to_account_id,to_account_type,
    amount,transfer_time,curency_type,
    source_ip,trans_code,is_deleted,
    last_modify_time,com_user_id
    ) values
    <foreach collection="list" item="item" index="index" separator="," >
      (
      #{item.transferId,jdbcType=VARCHAR},#{item.orderId,jdbcType=VARCHAR},#{item.businessOrderId,jdbcType=VARCHAR},#{item.frozenId,jdbcType=VARCHAR},
      #{item.transferType,jdbcType=TINYINT},#{item.transferStatus,jdbcType=TINYINT},#{item.fromAccountId,jdbcType=BIGINT},
      #{item.fromAccountType,jdbcType=SMALLINT},#{item.toAccountId,jdbcType=BIGINT},#{item.toAccountType,jdbcType=SMALLINT},
      #{item.amount,jdbcType=INTEGER},#{item.transferTime,jdbcType=TIMESTAMP},#{item.curencyType,jdbcType=VARCHAR},
      #{item.sourceIp,jdbcType=VARCHAR},#{item.transCode,jdbcType=VARCHAR},#{item.isDeleted,jdbcType=TINYINT},
      #{item.lastModifyTime,jdbcType=TIMESTAMP},#{item.comUserId,jdbcType=VARCHAR}
      )
    </foreach>
  </insert>

  <select id="queryTransferAccounts" resultMap="BaseResultMap" parameterType="com.xudq.api.vo.FlowRequestVO" >
    select
    <include refid="Base_Column_List" />
    from pay_core_transfer_account
    <include refid="flow_where_sql" />
    <if test="page != null and per != null">
      limit #{offset}, #{per}
    </if>
  </select>

  <select id="queryTransferAccountsCount" resultType="java.lang.Integer" parameterType="com.xudq.api.vo.FlowRequestVO" >
    select
    IFNULL(COUNT(1),0)
    from pay_core_transfer_account
    <include refid="flow_where_sql" />
  </select>

  <sql id="flow_where_sql" >
    <where >
      <if test="businessOrderId != null and businessOrderId != ''" >
        AND business_order_id = #{businessOrderId,jdbcType=VARCHAR}
      </if>
      <if test="orderId != null and orderId != ''" >
        AND order_id = #{orderId,jdbcType=VARCHAR}
      </if>
      <if test="comUserId != null and comUserId != ''" >
        AND com_user_id = #{comUserId,jdbcType=VARCHAR}
      </if>
      <if test="comUserIds != null and comUserIds.size > 0">
        and com_user_id in
        <foreach item="item" index="index" collection="comUserIds" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
      <if test="type != null and type != 0" >
        AND transfer_type = #{type,jdbcType=INTEGER}
      </if>
      <if test="status != null and status != 0" >
        AND transfer_status = #{status,jdbcType=INTEGER}
      </if>
      <!--      <if test="source != null and source != ''" >
              AND source = #{source,jdbcType=VARCHAR}
            </if>-->
      <if test="startTime != null and startTime != ''" >
        AND transfer_time > #{startTime,jdbcType=VARCHAR}
      </if>
      <if test="endTime != null and endTime != ''" >
        AND transfer_time &lt; #{endTime,jdbcType=VARCHAR}
      </if>
    </where>
  </sql>

</mapper>