<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xudq.api.dao.FrozenPOMapper" >
  <resultMap id="BaseResultMap" type="com.xudq.api.po.FrozenPO" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="business_order_id" property="businessOrderId" jdbcType="VARCHAR" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="com_user_id" property="comUserId" jdbcType="VARCHAR" />
    <result column="pc_user_id" property="pcUserId" jdbcType="VARCHAR" />
    <result column="account_id" property="accountId" jdbcType="BIGINT" />
    <result column="account_type" property="accountType" jdbcType="SMALLINT" />
    <result column="frozen_status" property="frozenStatus" jdbcType="SMALLINT" />
    <result column="frozen_id" property="frozenId" jdbcType="VARCHAR" />
    <result column="orgin_frozen_id" property="orginFrozenId" jdbcType="VARCHAR" />
    <result column="amount" property="amount" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="frozen_type" property="frozenType" jdbcType="TINYINT" />
    <result column="order_amount" property="orderAmount" jdbcType="INTEGER" />
    <result column="frozen_time" property="frozenTime" jdbcType="TIMESTAMP" />
    <result column="curency" property="curency" jdbcType="VARCHAR" />
    <result column="source_ip" property="sourceIp" jdbcType="VARCHAR" />
    <result column="is_deleted" property="isDeleted" jdbcType="TINYINT" />
    <result column="last_modify_time" property="lastModifyTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, business_order_id, order_id, com_user_id, pc_user_id, account_id, account_type, frozen_status,
    frozen_id, orgin_frozen_id, amount, type, frozen_type, order_amount, frozen_time, curency, source_ip,
    is_deleted, last_modify_time, create_time, update_time
  </sql>


  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from pay_core_frozen
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectByFrozenId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from pay_core_frozen
    where business_order_id = #{businessOrderId}
  </select>

  <insert id="insert" parameterType="com.xudq.api.po.FrozenPO" >
    insert into pay_core_frozen (id, business_order_id, order_id, 
      com_user_id, pc_user_id, account_id,
      account_type, frozen_status, frozen_id, orgin_frozen_id,
      amount, type, frozen_type, order_amount,
      frozen_time, curency, source_ip, 
      is_deleted, last_modify_time
      )
    values (#{id,jdbcType=INTEGER}, #{businessOrderId,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR}, 
      #{comUserId,jdbcType=VARCHAR}, #{pcUserId,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT},
      #{accountType,jdbcType=SMALLINT},#{frozenStatus,jdbcType=SMALLINT},#{frozenId,jdbcType=VARCHAR}, #{orginFrozenId,jdbcType=VARCHAR},
      #{amount,jdbcType=INTEGER}, #{type,jdbcType=TINYINT}, #{frozenType}, #{orderAmount,jdbcType=INTEGER},
      #{frozenTime,jdbcType=TIMESTAMP}, #{curency,jdbcType=VARCHAR}, #{sourceIp,jdbcType=VARCHAR}, 
      #{isDeleted,jdbcType=TINYINT}, #{lastModifyTime,jdbcType=TIMESTAMP}
      )
  </insert>


  <insert id="insertSelective" parameterType="com.xudq.api.po.FrozenPO" keyProperty="id" useGeneratedKeys="true">
    insert into pay_core_frozen
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="businessOrderId != null" >
        business_order_id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="comUserId != null" >
        com_user_id,
      </if>
      <if test="pcUserId != null" >
        pc_user_id,
      </if>
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="accountType != null" >
        account_type,
      </if>
      <if test="frozenType != null" >
        frozen_type,
      </if>
      <if test="frozenStatus != null" >
        frozen_status,
      </if>
      <if test="frozenId != null" >
        frozen_id,
      </if>
      <if test="orginFrozenId != null" >
        orgin_frozen_id,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="orderAmount != null" >
        order_amount,
      </if>
      <if test="frozenTime != null" >
        frozen_time,
      </if>
      <if test="curency != null" >
        curency,
      </if>
      <if test="sourceIp != null" >
        source_ip,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
      <if test="lastModifyTime != null" >
        last_modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="businessOrderId != null" >
        #{businessOrderId,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="comUserId != null" >
        #{comUserId,jdbcType=VARCHAR},
      </if>
      <if test="pcUserId != null" >
        #{pcUserId,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="accountType != null" >
        #{accountType,jdbcType=SMALLINT},
      </if>
      <if test="frozenType != null" >
        #{frozenType,jdbcType=SMALLINT},
      </if>
      <if test="frozenStatus != null" >
        #{frozenStatus,jdbcType=SMALLINT},
      </if>
      <if test="frozenId != null" >
        #{frozenId,jdbcType=VARCHAR},
      </if>
      <if test="orginFrozenId != null" >
        #{orginFrozenId,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="orderAmount != null" >
        #{orderAmount,jdbcType=INTEGER},
      </if>
      <if test="frozenTime != null" >
        #{frozenTime,jdbcType=TIMESTAMP},
      </if>
      <if test="curency != null" >
        #{curency,jdbcType=VARCHAR},
      </if>
      <if test="sourceIp != null" >
        #{sourceIp,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="lastModifyTime != null" >
        #{lastModifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>


  <update id="updateByPrimaryKeySelective" parameterType="com.xudq.api.po.FrozenPO" >
    update pay_core_frozen
    <set >
      <if test="businessOrderId != null" >
        business_order_id = #{businessOrderId,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="comUserId != null" >
        com_user_id = #{comUserId,jdbcType=VARCHAR},
      </if>
      <if test="pcUserId != null" >
        pc_user_id = #{pcUserId,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="accountType != null" >
        account_type = #{accountType,jdbcType=SMALLINT},
      </if>
      <if test="frozenStatus != null" >
        frozen_status = #{frozenStatus,jdbcType=SMALLINT},
      </if>
      <if test="frozenId != null" >
        frozen_id = #{frozenId,jdbcType=VARCHAR},
      </if>
      <if test="orginFrozenId != null" >
        orgin_frozen_id = #{orginFrozenId,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="orderAmount != null" >
        order_amount = #{orderAmount,jdbcType=INTEGER},
      </if>
      <if test="frozenTime != null" >
        frozen_time = #{frozenTime,jdbcType=TIMESTAMP},
      </if>
      <if test="curency != null" >
        curency = #{curency,jdbcType=VARCHAR},
      </if>
      <if test="sourceIp != null" >
        source_ip = #{sourceIp,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="lastModifyTime != null" >
        last_modify_time = #{lastModifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>


  <sql id="where_sql" >
    <where >
      <if test="businessOrderId != null" >
        AND business_order_id = #{businessOrderId,jdbcType=VARCHAR}
      </if>
      <if test="orderId != null" >
        AND order_id = #{orderId,jdbcType=VARCHAR}
      </if>
      <if test="comUserId != null" >
        AND com_user_id = #{comUserId,jdbcType=VARCHAR}
      </if>
      <if test="comUserIds != null and comUserIds.size > 0">
        and com_user_id in
        <foreach item="item" index="index" collection="comUserIds" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
      <if test="pcUserId != null" >
        AND pc_user_id = #{pcUserId,jdbcType=VARCHAR}
      </if>
      <if test="accountId != null" >
        AND account_id = #{accountId,jdbcType=BIGINT}
      </if>
      <if test="accountType != null" >
        AND account_type = #{accountType,jdbcType=SMALLINT}
      </if>
      <if test="frozenStatus != null" >
        AND frozen_status = #{frozenStatus,jdbcType=SMALLINT}
      </if>
      <if test="frozenId != null" >
        AND frozen_id = #{frozenId,jdbcType=VARCHAR}
      </if>
      <if test="orginFrozenId != null" >
        AND orgin_frozen_id = #{orginFrozenId,jdbcType=VARCHAR}
      </if>
      <if test="amount != null" >
        AND amount = #{amount,jdbcType=INTEGER}
      </if>
      <if test="type != null" >
        AND type = #{type,jdbcType=TINYINT}
      </if>
      <if test="orderAmount != null" >
        AND order_amount = #{orderAmount,jdbcType=INTEGER}
      </if>
      <if test="frozenTime != null" >
        AND frozen_time = #{frozenTime,jdbcType=TIMESTAMP}
      </if>
      <if test="curency != null" >
        AND curency = #{curency,jdbcType=VARCHAR}
      </if>
      <if test="sourceIp != null" >
        AND source_ip = #{sourceIp,jdbcType=VARCHAR}
      </if>
      <if test="isDeleted != null" >
        AND is_deleted = #{isDeleted,jdbcType=TINYINT}
      </if>
      <if test="lastModifyTime != null" >
        AND last_modify_time = #{lastModifyTime,jdbcType=TIMESTAMP}
      </if>
      <if test="createTime != null" >
        AND create_time = #{createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="updateTime != null" >
        AND update_time = #{updateTime,jdbcType=TIMESTAMP}
      </if>
    </where>
  </sql>



  <insert id="batchInsert" parameterType="java.util.Map" >
    insert into pay_core_frozen (
    business_order_id,order_id,com_user_id,
    pc_user_id,account_id,account_type, frozen_status,
    frozen_id,orgin_frozen_id,amount,
    type,order_amount,frozen_time,
    curency,source_ip,is_deleted,
    last_modify_time
    ) values
    <foreach collection="list" item="item" index="index" separator="," >
      (
      #{item.businessOrderId,jdbcType=VARCHAR},#{item.orderId,jdbcType=VARCHAR},#{item.comUserId,jdbcType=VARCHAR},
      #{item.pcUserId,jdbcType=VARCHAR},#{item.accountId,jdbcType=BIGINT},#{item.accountType,jdbcType=SMALLINT},#{item.frozenStatus,jdbcType=SMALLINT},
      #{item.frozenId,jdbcType=VARCHAR},#{item.orginFrozenId,jdbcType=VARCHAR},#{item.amount,jdbcType=INTEGER},
      #{item.type,jdbcType=TINYINT},#{item.orderAmount,jdbcType=INTEGER},#{item.frozenTime,jdbcType=TIMESTAMP},
      #{item.curency,jdbcType=VARCHAR},#{item.sourceIp,jdbcType=VARCHAR},#{item.isDeleted,jdbcType=TINYINT},
      #{item.lastModifyTime,jdbcType=TIMESTAMP}
      )
    </foreach>
  </insert>

  <select id="queryFrozens" resultMap="BaseResultMap" parameterType="com.xudq.api.vo.FlowRequestVO" >
    select
    <include refid="Base_Column_List" />
    from pay_core_frozen
    <include refid="flow_where_sql" />
    <if test="page != null and per != null">
      limit #{offset}, #{per}
    </if>
  </select>

  <select id="queryFrozensCount" resultType="java.lang.Integer" parameterType="com.xudq.api.vo.FlowRequestVO" >
    select
    IFNULL(COUNT(1),0)
    from pay_core_frozen
    <include refid="flow_where_sql" />
  </select>


  <sql id="flow_where_sql" >
    <where >
      <if test="businessOrderId != null and businessOrderId != ''" >
        AND business_order_id = #{businessOrderId,jdbcType=VARCHAR}
      </if>
      <if test="orderId != null and orderId != ''" >
        AND order_id = #{orderId,jdbcType=VARCHAR}
      </if>
      <if test="comUserId != null and comUserId != ''" >
        AND com_user_id = #{comUserId,jdbcType=VARCHAR}
      </if>
      <if test="comUserIds != null and comUserIds.size > 0">
        and com_user_id in
        <foreach item="item" index="index" collection="comUserIds" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
      <if test="type != null and type != 0" >
        AND type = #{type,jdbcType=INTEGER}
      </if>
      <if test="status != null and status != 0" >
        AND frozen_status = #{status,jdbcType=INTEGER}
      </if>
<!--      <if test="source != null and source != ''" >
        AND source = #{source,jdbcType=VARCHAR}
      </if>-->
      <if test="startTime != null and startTime != ''" >
        AND frozen_time > #{startTime,jdbcType=VARCHAR}
      </if>
      <if test="endTime != null and endTime != ''" >
        AND frozen_time &lt; #{endTime,jdbcType=VARCHAR}
      </if>
    </where>
  </sql>

</mapper>