<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xudq.api.dao.PayCoreAdjustAccountMapper">
  <resultMap id="BaseResultMap" type="com.xudq.api.po.PayCoreAdjustAccount">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
    <result column="adjustment_id" jdbcType="VARCHAR" property="adjustmentId" />
    <result column="adjustment_type" jdbcType="TINYINT" property="adjustmentType" />
    <result column="adjustment_status" jdbcType="TINYINT" property="adjustmentStatus" />
    <result column="adjustment_mode" jdbcType="TINYINT" property="adjustmentMode" />
    <result column="pay_service_type" jdbcType="VARCHAR" property="payServiceType" />
    <result column="from_account_id" jdbcType="VARCHAR" property="fromAccountId" />
    <result column="from_account_type" jdbcType="VARCHAR" property="fromAccountType" />
    <result column="from_bank_card_num" jdbcType="VARCHAR" property="fromBankCardNum" />
    <result column="amount" jdbcType="INTEGER" property="amount" />
    <result column="currency_type" jdbcType="VARCHAR" property="currencyType" />
    <result column="into_account_id" jdbcType="VARCHAR" property="intoAccountId" />
    <result column="into_account_type" jdbcType="VARCHAR" property="intoAccountType" />
    <result column="into_bank_card_num" jdbcType="VARCHAR" property="intoBankCardNum" />
    <result column="adjustment_from" jdbcType="VARCHAR" property="adjustmentFrom" />
    <result column="operator_id" jdbcType="VARCHAR" property="operatorId" />
    <result column="operate_time" jdbcType="TIMESTAMP" property="operateTime" />
    <result column="adjustment_reason" jdbcType="CHAR" property="adjustmentReason" />
    <result column="approver_id" jdbcType="VARCHAR" property="approverId" />
    <result column="approve_time" jdbcType="TIMESTAMP" property="approveTime" />
    <result column="default_cond_code" jdbcType="VARCHAR" property="defaultCondCode" />
    <result column="check_idea" jdbcType="VARCHAR" property="checkIdea" />
    <result column="node_id" jdbcType="VARCHAR" property="nodeId" />
    <result column="request_id" jdbcType="VARCHAR" property="requestId" />
    <result column="approve_id" jdbcType="VARCHAR" property="approveId" />
    <result column="source_ip" jdbcType="VARCHAR" property="sourceIp" />
    <result column="user_mac" jdbcType="VARCHAR" property="userMac" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="fail_reason" jdbcType="VARCHAR" property="failReason" />
    <result column="last_modify_time" jdbcType="TIMESTAMP" property="lastModifyTime" />
    <result column="comments" jdbcType="VARCHAR" property="comments" />
    <result column="reserve_int_1" jdbcType="TINYINT" property="reserveInt1" />
    <result column="reserve_int_2" jdbcType="TINYINT" property="reserveInt2" />
    <result column="reserve_char_1" jdbcType="CHAR" property="reserveChar1" />
    <result column="reserve_char_2" jdbcType="CHAR" property="reserveChar2" />
    <result column="adjustment_reason_type" jdbcType="VARCHAR" property="adjustmentReasonType" />
    <result column="busi_id" jdbcType="VARCHAR" property="busiId" />
    <result column="source" jdbcType="VARCHAR" property="source" />
  </resultMap>
  <sql id="Base_Column_List">
    id, is_deleted, adjustment_id, adjustment_type, adjustment_status, adjustment_mode,
    pay_service_type, from_account_id, from_account_type, from_bank_card_num, amount,
    currency_type, into_account_id, into_account_type, into_bank_card_num, adjustment_from,
    operator_id, operate_time, adjustment_reason, approver_id, approve_time, default_cond_code,
    check_idea, node_id, request_id, approve_id, source_ip, user_mac, create_time, update_time,
    fail_reason, last_modify_time, comments, reserve_int_1, reserve_int_2, reserve_char_1,
    reserve_char_2, adjustment_reason_type, busi_id, source
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from pay_core_adjust_account
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="getByBusiIdAndRequestID"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from pay_core_adjust_account
    where busi_id = #{0}
    and request_id=#{1}
  </select>
  <select id="getUnAdjustmentByAdjustmentId" parameterType="java.lang.String"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from pay_core_adjust_account
    where adjustment_id = #{adjustmentId,jdbcType=VARCHAR}
    and adjustment_status=1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from pay_core_adjust_account
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xudq.api.po.PayCoreAdjustAccount">
    insert into pay_core_adjust_account (id, is_deleted, adjustment_id,
    adjustment_type, adjustment_status, adjustment_mode,
    pay_service_type, from_account_id, from_account_type,
    from_bank_card_num, amount, currency_type,
    into_account_id, into_account_type, into_bank_card_num,
    adjustment_from, operator_id, operate_time,
    adjustment_reason, approver_id, approve_time,
    default_cond_code, check_idea, node_id,
    request_id, approve_id, source_ip,
    user_mac, create_time, update_time,
    fail_reason, last_modify_time, comments,
    reserve_int_1, reserve_int_2, reserve_char_1,
    reserve_char_2, adjustment_reason_type, busi_id,
    source)
    values (#{id,jdbcType=BIGINT}, #{isDeleted,jdbcType=TINYINT}, #{adjustmentId,jdbcType=VARCHAR},
    #{adjustmentType,jdbcType=TINYINT}, #{adjustmentStatus,jdbcType=TINYINT}, #{adjustmentMode,jdbcType=TINYINT},
    #{payServiceType,jdbcType=VARCHAR}, #{fromAccountId,jdbcType=VARCHAR}, #{fromAccountType,jdbcType=VARCHAR},
    #{fromBankCardNum,jdbcType=VARCHAR}, #{amount,jdbcType=INTEGER}, #{currencyType,jdbcType=VARCHAR},
    #{intoAccountId,jdbcType=VARCHAR}, #{intoAccountType,jdbcType=VARCHAR}, #{intoBankCardNum,jdbcType=VARCHAR},
    #{adjustmentFrom,jdbcType=VARCHAR}, #{operatorId,jdbcType=VARCHAR}, #{operateTime,jdbcType=TIMESTAMP},
    #{adjustmentReason,jdbcType=CHAR}, #{approverId,jdbcType=VARCHAR}, #{approveTime,jdbcType=TIMESTAMP},
    #{defaultCondCode,jdbcType=VARCHAR}, #{checkIdea,jdbcType=VARCHAR}, #{nodeId,jdbcType=VARCHAR},
    #{requestId,jdbcType=VARCHAR}, #{approveId,jdbcType=VARCHAR}, #{sourceIp,jdbcType=VARCHAR},
    #{userMac,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
    #{failReason,jdbcType=VARCHAR}, #{lastModifyTime,jdbcType=TIMESTAMP}, #{comments,jdbcType=VARCHAR},
    #{reserveInt1,jdbcType=TINYINT}, #{reserveInt2,jdbcType=TINYINT}, #{reserveChar1,jdbcType=CHAR},
    #{reserveChar2,jdbcType=CHAR}, #{adjustmentReasonType,jdbcType=VARCHAR}, #{busiId,jdbcType=VARCHAR},
    #{source,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xudq.api.po.PayCoreAdjustAccount">
    insert into pay_core_adjust_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="adjustmentId != null">
        adjustment_id,
      </if>
      <if test="adjustmentType != null">
        adjustment_type,
      </if>
      <if test="adjustmentStatus != null">
        adjustment_status,
      </if>
      <if test="adjustmentMode != null">
        adjustment_mode,
      </if>
      <if test="payServiceType != null">
        pay_service_type,
      </if>
      <if test="fromAccountId != null">
        from_account_id,
      </if>
      <if test="fromAccountType != null">
        from_account_type,
      </if>
      <if test="fromBankCardNum != null">
        from_bank_card_num,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="currencyType != null">
        currency_type,
      </if>
      <if test="intoAccountId != null">
        into_account_id,
      </if>
      <if test="intoAccountType != null">
        into_account_type,
      </if>
      <if test="intoBankCardNum != null">
        into_bank_card_num,
      </if>
      <if test="adjustmentFrom != null">
        adjustment_from,
      </if>
      <if test="operatorId != null">
        operator_id,
      </if>
      <if test="operateTime != null">
        operate_time,
      </if>
      <if test="adjustmentReason != null">
        adjustment_reason,
      </if>
      <if test="approverId != null">
        approver_id,
      </if>
      <if test="approveTime != null">
        approve_time,
      </if>
      <if test="defaultCondCode != null">
        default_cond_code,
      </if>
      <if test="checkIdea != null">
        check_idea,
      </if>
      <if test="nodeId != null">
        node_id,
      </if>
      <if test="requestId != null">
        request_id,
      </if>
      <if test="approveId != null">
        approve_id,
      </if>
      <if test="sourceIp != null">
        source_ip,
      </if>
      <if test="userMac != null">
        user_mac,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="failReason != null">
        fail_reason,
      </if>
      <if test="lastModifyTime != null">
        last_modify_time,
      </if>
      <if test="comments != null">
        comments,
      </if>
      <if test="reserveInt1 != null">
        reserve_int_1,
      </if>
      <if test="reserveInt2 != null">
        reserve_int_2,
      </if>
      <if test="reserveChar1 != null">
        reserve_char_1,
      </if>
      <if test="reserveChar2 != null">
        reserve_char_2,
      </if>
      <if test="adjustmentReasonType != null">
        adjustment_reason_type,
      </if>
      <if test="busiId != null">
        busi_id,
      </if>
      <if test="source != null">
        source,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="adjustmentId != null">
        #{adjustmentId,jdbcType=VARCHAR},
      </if>
      <if test="adjustmentType != null">
        #{adjustmentType,jdbcType=TINYINT},
      </if>
      <if test="adjustmentStatus != null">
        #{adjustmentStatus,jdbcType=TINYINT},
      </if>
      <if test="adjustmentMode != null">
        #{adjustmentMode,jdbcType=TINYINT},
      </if>
      <if test="payServiceType != null">
        #{payServiceType,jdbcType=VARCHAR},
      </if>
      <if test="fromAccountId != null">
        #{fromAccountId,jdbcType=VARCHAR},
      </if>
      <if test="fromAccountType != null">
        #{fromAccountType,jdbcType=VARCHAR},
      </if>
      <if test="fromBankCardNum != null">
        #{fromBankCardNum,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="currencyType != null">
        #{currencyType,jdbcType=VARCHAR},
      </if>
      <if test="intoAccountId != null">
        #{intoAccountId,jdbcType=VARCHAR},
      </if>
      <if test="intoAccountType != null">
        #{intoAccountType,jdbcType=VARCHAR},
      </if>
      <if test="intoBankCardNum != null">
        #{intoBankCardNum,jdbcType=VARCHAR},
      </if>
      <if test="adjustmentFrom != null">
        #{adjustmentFrom,jdbcType=VARCHAR},
      </if>
      <if test="operatorId != null">
        #{operatorId,jdbcType=VARCHAR},
      </if>
      <if test="operateTime != null">
        #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="adjustmentReason != null">
        #{adjustmentReason,jdbcType=CHAR},
      </if>
      <if test="approverId != null">
        #{approverId,jdbcType=VARCHAR},
      </if>
      <if test="approveTime != null">
        #{approveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="defaultCondCode != null">
        #{defaultCondCode,jdbcType=VARCHAR},
      </if>
      <if test="checkIdea != null">
        #{checkIdea,jdbcType=VARCHAR},
      </if>
      <if test="nodeId != null">
        #{nodeId,jdbcType=VARCHAR},
      </if>
      <if test="requestId != null">
        #{requestId,jdbcType=VARCHAR},
      </if>
      <if test="approveId != null">
        #{approveId,jdbcType=VARCHAR},
      </if>
      <if test="sourceIp != null">
        #{sourceIp,jdbcType=VARCHAR},
      </if>
      <if test="userMac != null">
        #{userMac,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="failReason != null">
        #{failReason,jdbcType=VARCHAR},
      </if>
      <if test="lastModifyTime != null">
        #{lastModifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="comments != null">
        #{comments,jdbcType=VARCHAR},
      </if>
      <if test="reserveInt1 != null">
        #{reserveInt1,jdbcType=TINYINT},
      </if>
      <if test="reserveInt2 != null">
        #{reserveInt2,jdbcType=TINYINT},
      </if>
      <if test="reserveChar1 != null">
        #{reserveChar1,jdbcType=CHAR},
      </if>
      <if test="reserveChar2 != null">
        #{reserveChar2,jdbcType=CHAR},
      </if>
      <if test="adjustmentReasonType != null">
        #{adjustmentReasonType,jdbcType=VARCHAR},
      </if>
      <if test="busiId != null">
        #{busiId,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        #{source,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xudq.api.po.PayCoreAdjustAccount">
    update pay_core_adjust_account
    <set>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="adjustmentId != null">
        adjustment_id = #{adjustmentId,jdbcType=VARCHAR},
      </if>
      <if test="adjustmentType != null">
        adjustment_type = #{adjustmentType,jdbcType=TINYINT},
      </if>
      <if test="adjustmentStatus != null">
        adjustment_status = #{adjustmentStatus,jdbcType=TINYINT},
      </if>
      <if test="adjustmentMode != null">
        adjustment_mode = #{adjustmentMode,jdbcType=TINYINT},
      </if>
      <if test="payServiceType != null">
        pay_service_type = #{payServiceType,jdbcType=VARCHAR},
      </if>
      <if test="fromAccountId != null">
        from_account_id = #{fromAccountId,jdbcType=VARCHAR},
      </if>
      <if test="fromAccountType != null">
        from_account_type = #{fromAccountType,jdbcType=VARCHAR},
      </if>
      <if test="fromBankCardNum != null">
        from_bank_card_num = #{fromBankCardNum,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="currencyType != null">
        currency_type = #{currencyType,jdbcType=VARCHAR},
      </if>
      <if test="intoAccountId != null">
        into_account_id = #{intoAccountId,jdbcType=VARCHAR},
      </if>
      <if test="intoAccountType != null">
        into_account_type = #{intoAccountType,jdbcType=VARCHAR},
      </if>
      <if test="intoBankCardNum != null">
        into_bank_card_num = #{intoBankCardNum,jdbcType=VARCHAR},
      </if>
      <if test="adjustmentFrom != null">
        adjustment_from = #{adjustmentFrom,jdbcType=VARCHAR},
      </if>
      <if test="operatorId != null">
        operator_id = #{operatorId,jdbcType=VARCHAR},
      </if>
      <if test="operateTime != null">
        operate_time = #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="adjustmentReason != null">
        adjustment_reason = #{adjustmentReason,jdbcType=CHAR},
      </if>
      <if test="approverId != null">
        approver_id = #{approverId,jdbcType=VARCHAR},
      </if>
      <if test="approveTime != null">
        approve_time = #{approveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="defaultCondCode != null">
        default_cond_code = #{defaultCondCode,jdbcType=VARCHAR},
      </if>
      <if test="checkIdea != null">
        check_idea = #{checkIdea,jdbcType=VARCHAR},
      </if>
      <if test="nodeId != null">
        node_id = #{nodeId,jdbcType=VARCHAR},
      </if>
      <if test="requestId != null">
        request_id = #{requestId,jdbcType=VARCHAR},
      </if>
      <if test="approveId != null">
        approve_id = #{approveId,jdbcType=VARCHAR},
      </if>
      <if test="sourceIp != null">
        source_ip = #{sourceIp,jdbcType=VARCHAR},
      </if>
      <if test="userMac != null">
        user_mac = #{userMac,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="failReason != null">
        fail_reason = #{failReason,jdbcType=VARCHAR},
      </if>
      <if test="lastModifyTime != null">
        last_modify_time = #{lastModifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="comments != null">
        comments = #{comments,jdbcType=VARCHAR},
      </if>
      <if test="reserveInt1 != null">
        reserve_int_1 = #{reserveInt1,jdbcType=TINYINT},
      </if>
      <if test="reserveInt2 != null">
        reserve_int_2 = #{reserveInt2,jdbcType=TINYINT},
      </if>
      <if test="reserveChar1 != null">
        reserve_char_1 = #{reserveChar1,jdbcType=CHAR},
      </if>
      <if test="reserveChar2 != null">
        reserve_char_2 = #{reserveChar2,jdbcType=CHAR},
      </if>
      <if test="adjustmentReasonType != null">
        adjustment_reason_type = #{adjustmentReasonType,jdbcType=VARCHAR},
      </if>
      <if test="busiId != null">
        busi_id = #{busiId,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xudq.api.po.PayCoreAdjustAccount">
    update pay_core_adjust_account
    set is_deleted = #{isDeleted,jdbcType=TINYINT},
      adjustment_id = #{adjustmentId,jdbcType=VARCHAR},
      adjustment_type = #{adjustmentType,jdbcType=TINYINT},
      adjustment_status = #{adjustmentStatus,jdbcType=TINYINT},
      adjustment_mode = #{adjustmentMode,jdbcType=TINYINT},
      pay_service_type = #{payServiceType,jdbcType=VARCHAR},
      from_account_id = #{fromAccountId,jdbcType=VARCHAR},
      from_account_type = #{fromAccountType,jdbcType=VARCHAR},
      from_bank_card_num = #{fromBankCardNum,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=INTEGER},
      currency_type = #{currencyType,jdbcType=VARCHAR},
      into_account_id = #{intoAccountId,jdbcType=VARCHAR},
      into_account_type = #{intoAccountType,jdbcType=VARCHAR},
      into_bank_card_num = #{intoBankCardNum,jdbcType=VARCHAR},
      adjustment_from = #{adjustmentFrom,jdbcType=VARCHAR},
      operator_id = #{operatorId,jdbcType=VARCHAR},
      operate_time = #{operateTime,jdbcType=TIMESTAMP},
      adjustment_reason = #{adjustmentReason,jdbcType=CHAR},
      approver_id = #{approverId,jdbcType=VARCHAR},
      approve_time = #{approveTime,jdbcType=TIMESTAMP},
      default_cond_code = #{defaultCondCode,jdbcType=VARCHAR},
      check_idea = #{checkIdea,jdbcType=VARCHAR},
      node_id = #{nodeId,jdbcType=VARCHAR},
      request_id = #{requestId,jdbcType=VARCHAR},
      approve_id = #{approveId,jdbcType=VARCHAR},
      source_ip = #{sourceIp,jdbcType=VARCHAR},
      user_mac = #{userMac,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      fail_reason = #{failReason,jdbcType=VARCHAR},
      last_modify_time = #{lastModifyTime,jdbcType=TIMESTAMP},
      comments = #{comments,jdbcType=VARCHAR},
      reserve_int_1 = #{reserveInt1,jdbcType=TINYINT},
      reserve_int_2 = #{reserveInt2,jdbcType=TINYINT},
      reserve_char_1 = #{reserveChar1,jdbcType=CHAR},
      reserve_char_2 = #{reserveChar2,jdbcType=CHAR},
      adjustment_reason_type = #{adjustmentReasonType,jdbcType=VARCHAR},
      busi_id = #{busiId,jdbcType=VARCHAR},
      source = #{source,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>